generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.VarChar(36)
  fullname  String?  @db.VarChar(100)
  username  String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  avatar    String?  @db.VarChar(100)
  address   String?  @db.VarChar(100)
  phone     String?  @db.VarChar(10)
  role      String   @default("staff") @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  orders Order[]
  carts  Cart[]

  @@map("users")
}

model Category {
  id          String   @id @default(uuid()) @db.VarChar(36)
  name        String   @db.VarChar(100)
  image       String?  @db.VarChar(100)
  description String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  dishes Dish[]

  @@map("categories")
}

model Dish {
  id           String        @id @default(uuid()) @db.VarChar(36)
  name         String        @db.VarChar(100)
  image        String?       @db.VarChar(100)
  description  String?       @db.Text
  createdAt    DateTime      @default(now()) @map("created_at")
  isDeleted    Boolean       @default(false) @map("is_deleted")
  orderDetails OrderDetail[]
  prices       Price[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.VarChar(36)
  carts      Cart[]

  @@map("dishes")
}

model Price {
  dish      Dish     @relation(fields: [dishId], references: [id])
  dishId    String   @db.VarChar(36)
  price     Int
  updatedAt DateTime @default(now()) @map("updated_at")

  @@id([dishId, updatedAt])
  @@map("prices")
}

model Order {
  id           String        @id @default(uuid()) @db.VarChar(36)
  createdAt    DateTime      @default(now()) @map("created_at")
  status       String        @default("pending") @db.VarChar(100)
  total        BigInt        @default(0)
  isDeleted    Boolean       @default(false) @map("is_deleted")
  orderDetails OrderDetail[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.VarChar(36)

  table   Table?  @relation(fields: [tableId], references: [id])
  tableId String? @db.VarChar(36)

  @@map("orders")
}

model Table {
  id        String   @id @default(uuid()) @db.VarChar(36)
  number    String   @db.VarChar(100)
  status    String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  orders Order[]

  @@map("tables")
}

model OrderDetail {
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @db.VarChar(36)
  dish    Dish   @relation(fields: [dishId], references: [id])
  dishId  String @db.VarChar(36)

  quantity Int

  @@id([orderId, dishId])
  @@map("order_details")
}

model Cart {
  id        String   @id @default(uuid()) @db.VarChar(36)
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at")
  isDeleted Boolean  @default(false) @map("is_deleted")

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.VarChar(36)

  dish   Dish   @relation(fields: [dishId], references: [id])
  dishId String @db.VarChar(36)

  @@map("carts")
}
